<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.walkfun.db.account.dao.impl.AccountMapper">

    <!--user and user detail DB-->
    <resultMap id="accountInfo" type="com.walkfun.entity.account.UserInfo">
        <id column="USER_ID" property="userId"/>
        <result column="UUID" property="uuid"/>
        <result column="DEVICE_ID" property="deviceId"/>
        <result column="USER_NAME" property="userName"/>
        <result column="NICK_NAME" property="nickName"/>
        <result column="SEX" property="sex"/>
        <result column="AGE" property="age"/>
        <result column="WEIGHT" property="weight"/>
        <result column="HEIGHT" property="height"/>
        <result column="PLATFORM_INFO" property="platformInfo"/>
        <result column="PIC_ID" property="picId"/>
        <result column="USER_TITLE_ID" property="userTitleId"/>
        <result column="USER_TITLE" property="userTitle"/>
        <result column="USER_FAT_DESC" property="userFatDesc"/>
        <result column="LEVEL" property="level"/>
        <result column="GOLD_COIN" property="goldCoin"/>
        <result column="EXPERIENCE" property="experience"/>
        <result column="HEALTH" property="health"/>
        <result column="FATNESS" property="fatness"/>
        <result column="TOTAL_DISTANCE" property="totalDistance"/>
        <result column="TOTAL_CARLORIE" property="totalCarlorie"/>
        <result column="TOTAL_STEPS" property="totalSteps"/>
        <result column="TOTAL_WALKING_TIMES" property="totalWalkingTimes"/>
        <result column="TOTAL_ACTIVE_TIMES" property="totalActiveTimes"/>
        <result column="AVG_SPEED" property="avgSpeed"/>
        <result column="CURRENT_COMBO" property="currentCombo"/>
        <result column="MAX_COMBO" property="maxCombo"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <sql id="accountInfoTable">
        U.USER_ID,
        U.UUID,
        U.DEVICE_ID,
        U.USER_NAME,
        U.NICK_NAME,
        U.SEX,
        U.AGE,
        U.WEIGHT,
        U.HEIGHT,
        U.PLATFORM_INFO,
        UD.PIC_ID,
        UD.USER_TITLE_ID,
        UD.USER_TITLE,
        UD.USER_FAT_DESC,
        UD.LEVEL,
        UD.GOLD_COIN,
        UD.EXPERIENCE,
        UD.HEALTH,
        UD.FATNESS,
        UD.TOTAL_DISTANCE,
        UD.TOTAL_CARLORIE,
        UD.TOTAL_STEPS,
        UD.TOTAL_WALKING_TIMES,
        UD.TOTAL_ACTIVE_TIMES,
        UD.AVG_SPEED,
        UD.CURRENT_COMBO,
        UD.MAX_COMBO,
        UD.UPDATE_TIME
    </sql>

    <select id="getAccountInfoByID" resultMap="accountInfo">
        SELECT
        <include refid="accountInfoTable"/>
        FROM USER_BASE AS U
        INNER JOIN USER_DETAIL AS UD
        ON U.USER_ID = UD.USER_ID
        WHERE U.USER_ID = #{userId}
        <if test="lastUpdateTime != null">
        <![CDATA[
        AND UD.UPDATE_TIME > #{lastUpdateTime}
        ]]>
        </if>
    </select>

    <select id="getAccountInfo" resultMap="accountInfo">
        SELECT
        <include refid="accountInfoTable"/>
        FROM USER_BASE AS U
        INNER JOIN USER_DETAIL AS UD
        ON U.USER_ID = UD.USER_ID
        WHERE U.USER_NAME = #{userName}
        AND U.USER_PASSWORD = #{password}
    </select>

    <select id="getAccountInfoByName" resultMap="accountInfo">
        SELECT
        <include refid="accountInfoTable"/>
        FROM USER_BASE AS U
        INNER JOIN USER_DETAIL AS UD
        ON U.USER_ID = UD.USER_ID
        WHERE U.USER_NAME = #{userName}
    </select>

    <insert id="createAccountBase" parameterType="com.walkfun.entity.account.UserBase" useGeneratedKeys="true"
            keyProperty="baseEntity.userId">
        INSERT INTO USER_BASE
        (
            UUID,
            DEVICE_ID,
            USER_NAME,
            USER_PASSWORD,
            NICK_NAME,
            SEX,
            AGE,
            WEIGHT,
            HEIGHT,
            PLATFORM_INFO,
            CREATE_TIME,
            UPDATE_TIME
        )
        VALUES
        (
            #{baseEntity.uuid},
            #{baseEntity.deviceId},
            #{baseEntity.userName},
            #{baseEntity.password},
            #{baseEntity.nickName},
            #{baseEntity.sex},
            #{baseEntity.age},
            #{baseEntity.weight},
            #{baseEntity.height},
            #{baseEntity.platformInfo},
            now(),
            now()
        )
    </insert>

    <update id="updateAccountBase" parameterType="com.walkfun.entity.account.UserBase">
        UPDATE USER_BASE
        SET
        <if test="baseEntity.uuid != null">
        <![CDATA[
        UUID = #{baseEntity.uuid},
        ]]>
        </if>
        DEVICE_ID = #{baseEntity.deviceId},
        SEX = #{baseEntity.sex},
        AGE = #{baseEntity.age},
        WEIGHT = #{baseEntity.weight},
        HEIGHT = #{baseEntity.height},
        PLATFORM_INFO = #{baseEntity.platformInfo},
        UPDATE_TIME = now()
        WHERE USER_ID = #{baseEntity.userId}
    </update>

    <insert id="createAccountDetail" parameterType="com.walkfun.entity.account.UserInfo">
        INSERT INTO USER_DETAIL
        (
            USER_ID,
            PIC_ID,
            USER_TITLE_ID,
            USER_TITLE,
            USER_FAT_DESC,
            LEVEL,
            GOLD_COIN,
            EXPERIENCE,
            HEALTH,
            FATNESS,
            TOTAL_DISTANCE,
            TOTAL_CARLORIE,
            TOTAL_STEPS,
            TOTAL_WALKING_TIMES,
            TOTAL_ACTIVE_TIMES,
            AVG_SPEED,
            CURRENT_COMBO,
            MAX_COMBO,
            UPDATE_TIME
        )
        VALUES
        (
          #{detailEntity.userId},
          #{detailEntity.picId},
          #{detailEntity.userTitleId},
          #{detailEntity.userTitle},
          #{detailEntity.userFatDesc},
          #{detailEntity.level},
          #{detailEntity.goldCoin},
          #{detailEntity.health},
          #{detailEntity.fatness},
          #{detailEntity.experience},
          #{detailEntity.totalDistance},
          #{detailEntity.totalCarlorie},
          #{detailEntity.totalSteps},
          #{detailEntity.totalWalkingTimes},
          #{detailEntity.totalActiveTimes},
          #{detailEntity.avgSpeed},
          #{detailEntity.currentCombo},
          #{detailEntity.maxCombo},
          now()
        );
    </insert>

    <update id="updateAccountDetail" parameterType="com.walkfun.entity.account.UserInfo">
        UPDATE USER_DETAIL
        SET
            PIC_ID = #{detailEntity.picId},
            USER_TITLE_ID = #{detailEntity.userTitleId},
            USER_TITLE = #{detailEntity.userTitle},
            USER_FAT_DESC = #{detailEntity.userFatDesc},
            LEVEL = #{detailEntity.level},
            GOLD_COIN = #{detailEntity.goldCoin},
            EXPERIENCE = #{detailEntity.experience},
            HEALTH = #{detailEntity.health},
            FATNESS = #{detailEntity.fatness},
            TOTAL_DISTANCE = #{detailEntity.totalDistance},
            TOTAL_CARLORIE = #{detailEntity.totalCarlorie},
            TOTAL_STEPS = #{detailEntity.totalSteps},
            TOTAL_WALKING_TIMES = #{detailEntity.totalWalkingTimes},
            TOTAL_ACTIVE_TIMES = #{detailEntity.totalActiveTimes},
            AVG_SPEED = #{detailEntity.avgSpeed},
            CURRENT_COMBO = #{detailEntity.currentCombo},
            MAX_COMBO = #{detailEntity.maxCombo},
            UPDATE_TIME = now()
        WHERE USER_ID = #{detailEntity.userId}
    </update>

    <!--user friend DB-->

    <resultMap id="userFriendInfo" type="com.walkfun.entity.account.UserFriend">
        <id column="USER_ID" property="userId"/>
        <result column="FRIEND_ID" property="friendId"/>
        <result column="FRIEND_STATUS" property="friendStatus"/>
        <result column="FRIEND_EACH" property="friendEach"/>
        <result column="ADD_TIME" property="addTime"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <sql id="userFriendInfoTable">
        UF.USER_ID,
        UF.FRIEND_ID,
        UF.FRIEND_STATUS,
        UF.FRIEND_EACH,
        UF.ADD_TIME,
        UF.UPDATE_TIME
    </sql>

    <select id="getFriendById" resultMap="userFriendInfo">
        SELECT
        <include refid="userFriendInfoTable"/>
        FROM FRIENDSHIP AS UF
        WHERE UF.USER_ID = #{userId}
        AND UF.FRIEND_ID = #{friendId}
    </select>

    <insert id="createOrUpdateUserFriend" parameterType="com.walkfun.entity.account.UserFriend">
        INSERT INTO FRIENDSHIP
        (
            USER_ID,
            FRIEND_ID,
            FRIEND_STATUS,
            FRIEND_EACH,
            ADD_TIME,
            UPDATE_TIME
        )
        VALUES
        (
            #{entity.userId},
            #{entity.friendId},
            #{entity.friendStatus},
            #{entity.friendEach},
            now(),
            now()
        )
        ON DUPLICATE KEY
        UPDATE
            FRIEND_STATUS=#{entity.friendStatus},
            FRIEND_EACH= #{entity.friendEach},
            UPDATE_TIME= now();
    </insert>

    <select id="getUserFollows" resultMap="userFriendInfo">
        SELECT
        <include refid="userFriendInfoTable"/>
        FROM FRIENDSHIP AS UF
        WHERE UF.USER_ID = #{userId}
        <if test="lastUpdateTime != null"><![CDATA[
        AND UPDATE_TIME > #{lastUpdateTime}
        ]]></if>
    </select>

    <select id="getUserFans" resultMap="userFriendInfo">
        SELECT
        <include refid="userFriendInfoTable"/>
        FROM FRIENDSHIP AS UF
        WHERE FRIEND_ID = #{userId}
        <if test="lastUpdateTime != null"><![CDATA[
        AND UPDATE_TIME > #{lastUpdateTime}
        ]]></if>
    </select>

    <!--user action DB-->

    <resultMap id="userActionInfo" type="com.walkfun.entity.account.UserAction">
        <id column="ACTION_FROM_ID" property="actionFromId"/>
        <result column="ACTION_FROM_NAME" property="actionFromName"/>
        <result column="ACTION_TO_ID" property="actionToId"/>
        <result column="ACTION_TO_NAME" property="actionToName"/>
        <result column="ACTION_ID" property="actionId"/>
        <result column="ACTION_NAME" property="actionName"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <sql id="userActionInfoTable">
        ACTION_FROM_ID,
        ACTION_FROM_NAME,
        ACTION_TO_ID,
        ACTION_TO_NAME,
        ACTION_ID,
        ACTION_NAME,
        UPDATE_TIME
    </sql>

    <insert id="createUserAction" parameterType="com.walkfun.entity.account.UserAction">
        INSERT INTO ACTION
        (
            ACTION_FROM_ID,
            ACTION_FROM_NAME,
            ACTION_TO_ID,
            ACTION_TO_NAME,
            ACTION_ID,
            ACTION_NAME,
            UPDATE_TIME
        )
        VALUES
        (
            #{entity.actionFromId},
            #{entity.actionFromName},
            #{entity.actionToId},
            #{entity.actionToName},
            #{entity.actionId},
            #{entity.actionName},
            now()
        );
    </insert>

    <select id="getNewlyUserAction" resultMap="userActionInfo">
        SELECT
        <include refid="userActionInfoTable"/>
        FROM ACTION AS A
        INNER JOIN USER_LAST_SYNC AS ULS
        ON A.ACTION_TO_ID = ULS.USER_ID
        WHERE A.ACTION_TO_ID = #{userId}
        AND A.UPDATE_TIME > ULS.ACTION_SYNC_TIME
    </select>

    <update id="updateUserActionSyncTime">
         UPDATE USER_LAST_SYNC
         SET
             ACTION_SYNC_TIME = now()
         WHERE USER_ID = #{userId}
    </update>

    <!--for user search -->
    <resultMap id="searchAccountInfo" type="com.walkfun.entity.account.SearchUserInfo">
        <id column="USER_ID" property="userId"/>
        <result column="NICK_NAME" property="nickName"/>
        <result column="SEX" property="sex"/>
        <result column="USER_TITLE" property="userTitle"/>
        <result column="LEVEL" property="level"/>
        <result column="LAST_ACTIVE_TIME" property="lastActiveTime"/>
    </resultMap>

    <sql id="searchAccountTable">
        U.USER_ID,
        U.NICK_NAME,
        U.SEX,
        UD.USER_TITLE,
        UD.LEVEL,
        UD.LAST_ACTIVE_TIME
    </sql>

    <select id="searchAccountInfoByName" resultMap="searchAccountInfo">
        SELECT
        <include refid="searchAccountTable"/>
        FROM USER_BASE AS U
        INNER JOIN USER_DETAIL AS UD
        ON U.USER_ID = UD.USER_ID
        WHERE U.NICK_NAME like CONCAT('%',${nickName},'%')
        LIMIT 10
    </select>

    <!--for friend sort-->
    <resultMap id="friendSortInfo" type="com.walkfun.entity.account.FriendSortInfo">
        <id column="USER_ID" property="friendId"/>
        <result column="NICK_NAME" property="friendName"/>
        <result column="SEX" property="sex"/>
        <result column="USER_TITLE" property="userTitle"/>
        <result column="LEVEL" property="level"/>
        <result column="TOTAL_DISTANCE" property="totalDistance"/>
        <result column="FRIEND_STATUS" property="friendStatus"/>
        <result column="LAST_ACTIVE_TIME" property="lastActiveTime"/>
    </resultMap>

    <sql id="friendSortTable">
        U.USER_ID,
        U.NICK_NAME,
        U.SEX,
        UD.USER_TITLE,
        UD.LEVEL,
        UD.TOTAL_DISTANCE,
        UD.FRIEND_STATUS,
        UD.LAST_ACTIVE_TIME
    </sql>

    <select id="getFriendSort" resultMap="friendSortInfo">
        SELECT
        <include refid="friendSortTable"/>
        FROM FRIENDSHIP AS UF
        INNER JOIN USER_BASE AS U
        ON UF.USER_ID = U.USER_ID
        INNER JOIN USER_DETAIL AS UD
        ON U.USER_ID = UD.USER_ID
        WHERE UF.USER_ID = #{userId}
        AND UPDATE_TIME > #{lastUpdateTime}
    </select>


    <!--user prop DB-->

    <resultMap id="userPropInfo" type="com.walkfun.entity.account.UserProp">
        <id column="USER_ID" property="userId"/>
        <result column="PRODUCT_ID" property="productId"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="OWN_NUMBER" property="ownNumber"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <sql id="userPropInfoTable">
        UP.USER_ID,
        UP.PRODUCT_ID,
        UP.PRODUCT_NAME,
        UP.OWN_NUMBER,
        UP.UPDATE_TIME
    </sql>

    <select id="getUserProps" resultMap="userPropInfo">
        SELECT
        <include refid="userPropInfoTable"/>
        FROM USER_PROP AS UP
        WHERE UP.USER_ID = #{userId}
        <if test="lastUpdateTime != null">
            <![CDATA[
        AND UP.UPDATE_TIME > #{lastUpdateTime}
            ]]>
        </if>
    </select>

    <insert id="createOrUpdateUserProp" parameterType="com.walkfun.entity.account.UserProp">
        INSERT INTO USER_PROP
        (
            USER_ID,
            PRODUCT_ID,
            PRODUCT_NAME,
            OWN_NUMBER,
            UPDATE_TIME
        )
        VALUES
        (
            #{entity.userId},
            #{entity.productId},
            #{entity.productName},
            #{entity.ownNumber},
            now()
        )
        ON DUPLICATE KEY
        UPDATE
            OWN_NUMBER=#{entity.ownNumber},
            UPDATE_TIME= now();
    </insert>
</mapper>
